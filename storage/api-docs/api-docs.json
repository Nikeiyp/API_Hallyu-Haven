{
    "openapi": "3.0.0",
    "info": {
        "title": "My API",
        "description": "This is The API documentation for my very first REST API.",
        "version": "1.0"
    },
    "paths": {
        "/api/user/register": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Register new user & get token",
                "operationId": "2d2ebba728688d7f51887b0cd28ca35a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {},
                            "example": {
                                "name": "Ada Lovelace",
                                "email": "ada.lovelace@gmail.com",
                                "password": "Password123",
                                "password_confirmation": "Password123"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful registration"
                    },
                    "400": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/user/login": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Log in and receive token",
                "operationId": "0e18ef6db0c92942c80f123acaeef89c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {},
                            "example": {
                                "email": "ada.lovelace@gmail.com",
                                "password": "Password123"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful"
                    },
                    "400": {
                        "description": "Invalid credentials"
                    }
                }
            }
        },
        "/api/user/logout": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Logout and revoke token",
                "operationId": "dd60e2b11d5020dfb3e95e8d9fdee36d",
                "responses": {
                    "200": {
                        "description": "Logout successful"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/merchandise": {
            "get": {
                "tags": [
                    "Merchandise"
                ],
                "summary": "Get list of merchandise",
                "description": "Returns a paginated list of merchandise with filtering and sorting options.",
                "operationId": "getMerchandiseList",
                "parameters": [
                    {
                        "name": "_page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "_limit",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    },
                    {
                        "name": "_search",
                        "in": "query",
                        "description": "Search by merchandise name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_sort_by",
                        "in": "query",
                        "description": "Sort by criteria (e.g., 'latest', 'name_asc', 'price_desc')",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "latest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Merchandise"
                ],
                "summary": "Create a new merchandise",
                "description": "Stores a new merchandise item with an image upload.",
                "operationId": "storeMerchandise",
                "requestBody": {
                    "description": "Merchandise data",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "price",
                                    "image"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Cool T-Shirt"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "A very cool t-shirt made of cotton."
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 150000
                                    },
                                    "image": {
                                        "description": "Image file (jpeg, png, jpg, gif, svg).",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Merchandise created successfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/slider-merchandise": {
            "get": {
                "tags": [
                    "Merchandise"
                ],
                "summary": "Get merchandise for slider",
                "description": "Returns a specific list of merchandise items for a slider feature.",
                "operationId": "getSliderMerchandise",
                "responses": {
                    "200": {
                        "description": "Slider merchandise loaded successfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/merchandise/{id}": {
            "get": {
                "tags": [
                    "Merchandise"
                ],
                "summary": "Get a single merchandise",
                "description": "Returns the details of a specific merchandise item.",
                "operationId": "getMerchandiseById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the merchandise",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Merchandise not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Merchandise"
                ],
                "summary": "Update an existing merchandise",
                "description": "Updates a merchandise item. Note: Use POST with _method=PUT for form-data.",
                "operationId": "updateMerchandise",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the merchandise to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Merchandise data to update. Image update is not included here but can be handled separately.",
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated T-Shirt"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "An updated description."
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 175000
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Merchandise updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Merchandise not found"
                    },
                    "400": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Merchandise"
                ],
                "summary": "Delete a merchandise",
                "description": "Deletes a specific merchandise item and its associated image.",
                "operationId": "deleteMerchandise",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the merchandise to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Merchandise deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Merchandise deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Merchandise not found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "title": "User Model",
                "description": "User Model",
                "xml": {
                    "name": "User"
                }
            }
        },
        "securitySchemes": {
            "passport_token_ready": {
                "type": "http",
                "scheme": "bearer",
                "description": "Enter token in format without \"Bearer \"",
                "name": "Authorization",
                "in": "header"
            },
            "passport2": {
                "type": "oauth2",
                "description": "Laravel passport oauth2 security",
                "scheme": "https",
                "flows": {
                    "password": {
                        "authorizationUrl": "http://localhost/oauth/authorize",
                        "tokenUrl": "http://localhost/oauth/token",
                        "refreshUrl": "http://localhost/token/refresh",
                        "scopes": []
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "user",
            "description": "user"
        },
        {
            "name": "Merchandise",
            "description": "Merchandise"
        }
    ]
}